{"version":3,"sources":["webpack:///./src/app/task/task.module.ts","webpack:///./src/app/task/task.page.html","webpack:///./src/app/task/task.page.scss","webpack:///./src/app/task/task.page.ts"],"names":[],"mappings":"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","file":"task-task-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DragulaModule } from 'ng2-dragula';\nimport { IonicModule } from '@ionic/angular';\n\nimport { TaskPage } from './task.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TaskPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    DragulaModule\n  ],\n  declarations: [TaskPage]\n})\nexport class TaskPageModule {}\n","module.exports = \"<ion-content padding style=\\\"padding-top: 30px;\\\" forceOverscroll=\\\"false\\\">\\n\\t<div class=\\\"main-container\\\">\\n\\t\\t<div class=\\\"action-group\\\">\\n\\t\\t\\t<div class='action-row'>\\n\\t\\t\\t\\t<img class='tab-bar-icon' src='assets/imgs/settings_icon.png'/>\\n\\t\\t\\t  <ion-button\\n\\t  \\t\\t\\t[ngClass]=\\\"[filter=='todo' ? 'yellow-bg' : '']\\\"\\n\\t  \\t\\t\\t(click)=\\\"filterTasks('todo')\\\"\\n  \\t\\t\\t>\\n\\t\\t\\t    <ion-label>To-do</ion-label>\\n\\t\\t\\t  </ion-button>\\n\\n\\t\\t\\t  <ion-button \\n\\t  \\t\\t\\t[ngClass]=\\\"[filter=='doing' ? 'yellow-bg' : '']\\\"\\n  \\t\\t\\t\\t(click)=\\\"filterTasks('doing')\\\"\\n\\t\\t\\t  >\\n\\t\\t\\t    <ion-label>Doing</ion-label>\\n\\t\\t\\t  </ion-button>\\n\\n\\t\\t\\t  <ion-button \\n\\t  \\t\\t\\t[ngClass]=\\\"[filter=='done' ? 'yellow-bg' : '']\\\"\\n  \\t\\t\\t\\t(click)=\\\"filterTasks('done')\\\"\\n\\t\\t\\t  >\\n\\t\\t\\t    <ion-label>Done</ion-label>\\n\\t\\t\\t  </ion-button>\\n\\n\\t\\t\\t  <ion-button \\n\\t  \\t\\t\\t[ngClass]=\\\"[filter=='showall' ? 'yellow-bg' : '']\\\"\\n  \\t\\t\\t\\t(click)=\\\"filterTasks('showall')\\\"\\n\\t\\t\\t  >\\n\\t\\t\\t    <ion-label>SHOW ALL</ion-label>\\n\\t\\t\\t  </ion-button>\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<div class='action-row'>\\n\\t\\t\\t\\t<img class='tab-bar-icon' src='assets/imgs/sort_icon.png'/>\\n \\n \\t\\t\\t  <ion-button \\n \\t  \\t\\t\\t[ngClass]=\\\"[selectedDepartment=='admin' ? 'dark-bg' : '']\\\"\\n   \\t\\t\\t\\t(click)=\\\"selectDepartment('admin')\\\"\\n \\t\\t\\t  >\\n\\t\\t\\t    <ion-label>Admin</ion-label>\\n\\t\\t\\t  </ion-button>\\n\\n\\t\\t\\t \\n \\t\\t\\t  <ion-button \\n \\t  \\t\\t\\t[ngClass]=\\\"[selectedDepartment=='operations' ? 'dark-bg' : '']\\\"\\n   \\t\\t\\t\\t(click)=\\\"selectDepartment('operations')\\\"\\n \\t\\t\\t  >\\t\\t\\n\\t\\t\\t    <ion-label>Operations</ion-label>\\n\\t\\t\\t  </ion-button>\\n\\t\\t\\t  \\n\\t\\t\\t  <ion-button \\n\\t  \\t\\t\\t[ngClass]=\\\"[selectedDepartment=='marketing' ? 'dark-bg' : '']\\\"\\n  \\t\\t\\t\\t(click)=\\\"selectDepartment('marketing')\\\"\\n\\t\\t\\t  >\\n\\t\\t\\t    <ion-label>Marketing</ion-label>\\n\\t\\t\\t  </ion-button>\\n\\n\\t\\t\\t  <ion-button \\n\\t  \\t\\t\\t[ngClass]=\\\"[selectedDepartment=='camps' ? 'dark-bg' : '']\\\"\\n  \\t\\t\\t\\t(click)=\\\"selectDepartment('camps')\\\"\\n\\t\\t\\t  >\\n\\t\\t\\t    <ion-label>Camps</ion-label>\\n\\t\\t\\t  </ion-button>\\n\\n\\t\\t\\t  <ion-button \\n\\t  \\t\\t\\t[ngClass]=\\\"[selectedDepartment=='showall' ? 'dark-bg' : '']\\\"\\n  \\t\\t\\t\\t(click)=\\\"selectDepartment('showall')\\\"\\n\\t\\t\\t  >\\n\\t\\t\\t    <ion-label>SHOW ALL</ion-label>\\n\\t\\t\\t  </ion-button>\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<div class='action-row'>\\n\\t\\t\\t\\t<img class='tab-bar-icon' src='assets/imgs/sort2_icon.png'/>\\n\\t\\t\\t  <ion-button \\n\\t  \\t\\t\\t[ngClass]=\\\"[selectedOrder=='date_asc' ? 'dark-bg' : '']\\\"\\n  \\t\\t\\t\\t(click)=\\\"selectOrder('date_asc')\\\"\\n\\t\\t\\t  >\\n\\t\\t\\t  \\t<ion-icon name=\\\"arrow-round-up\\\"></ion-icon>\\n\\t\\t\\t    <ion-label>Date</ion-label>\\n\\t\\t\\t  </ion-button>\\n\\n\\t\\t\\t  <ion-button \\n\\t  \\t\\t\\t[ngClass]=\\\"[selectedOrder=='date_desc' ? 'dark-bg' : '']\\\"\\n  \\t\\t\\t\\t(click)=\\\"selectOrder('date_desc')\\\"\\n\\t\\t\\t  >\\n\\t\\t\\t  \\t<ion-icon name=\\\"arrow-round-down\\\"></ion-icon>\\n\\t\\t\\t    <ion-label>Date</ion-label>\\n\\t\\t\\t  </ion-button>\\n\\n\\t\\t\\t  <ion-button \\n\\t  \\t\\t\\t[ngClass]=\\\"[selectedOrder=='alphabet_asc' ? 'dark-bg' : '']\\\"\\n  \\t\\t\\t\\t(click)=\\\"selectOrder('alphabet_asc')\\\"\\n\\t\\t\\t  >\\n\\t\\t\\t  \\t<ion-icon name=\\\"arrow-round-up\\\"></ion-icon>\\n\\t\\t\\t    <ion-label>A-Z</ion-label>\\n\\t\\t\\t  </ion-button>\\n\\n\\t\\t\\t  <ion-button \\n\\t  \\t\\t\\t[ngClass]=\\\"[selectedOrder=='alphabet_desc' ? 'dark-bg' : '']\\\"\\n  \\t\\t\\t\\t(click)=\\\"selectOrder('alphabet_desc')\\\"\\n\\t\\t\\t  >\\n\\t\\t\\t  \\t<ion-icon name=\\\"arrow-round-down\\\"></ion-icon>\\n\\t\\t\\t    <ion-label>A-Z</ion-label>\\n\\t\\t\\t  </ion-button>\\n\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"tasks-group\\\">\\n\\n\\t\\t\\t<div class=\\\"status-bar-legend\\\">\\n\\t\\t\\t\\tStatus Bar Legend: <span class='red-bg' >0-50%</span> <span class='yellow-bg'>51-99%</span> <span class='green-bg'>100%</span>\\n\\t\\t\\t</div>\\n\\t\\t\\t\\n\\t\\t\\t<ion-card *ngFor='let task of taskService.tasks'>\\n\\t\\t\\t  <ion-card-header class='task-header'>\\n\\t\\t\\t    <ion-card-title class='task-name'>\\n\\t\\t\\t    \\t{{task.name}}\\n\\t\\t\\t    </ion-card-title>\\n\\n\\t\\t\\t    <ion-button fill='clear' (click)='onClickTask($event, task)'>\\n\\t\\t\\t    \\t<ion-icon name='arrow-dropright' class='task-edit-btn'></ion-icon>\\n\\t\\t\\t    </ion-button>\\n\\t\\t\\t  </ion-card-header>\\n\\t\\t\\t\\n\\t\\t\\t  <ion-card-content class='task-content'>\\n\\t\\t\\t    <ion-card-subtitle><b>DEADLINE:</b> {{task.deadline}}</ion-card-subtitle>\\n\\t\\t\\t    <ion-card-subtitle><b>ADDED BY:</b> {{task.author}}</ion-card-subtitle>\\n\\t\\t\\t    <ion-card-subtitle><b>IN-CHARGE:</b> {{task.group}}</ion-card-subtitle>\\n\\t\\t\\t  \\t<div class='task-status'>\\n\\t\\t\\t  \\t\\t<h4>STATUS</h4>\\n\\t\\t\\t  \\t\\t<div class=\\\"progress-bar-row\\\">\\n\\t\\t\\t  \\t\\t\\t<ion-progress-bar \\n\\t\\t\\t\\t  \\t\\t\\tstyle='height: 20px;' \\n\\t\\t\\t\\t  \\t\\t\\tclass=\\\"task-progress\\\"\\n\\t\\t\\t\\t  \\t\\t\\t[ngClass]=\\\"\\n\\t\\t\\t\\t  \\t\\t\\t[\\n\\t\\t\\t\\t  \\t\\t\\t\\ttask.progress <= 0.5 ? 'red' : '', \\n\\t\\t\\t\\t  \\t\\t\\t\\ttask.progress > 0.5 ? 'yellow' : '', \\n\\t\\t\\t\\t  \\t\\t\\t\\ttask.progress == 1 ? 'green' : '' \\n\\t\\t\\t\\t  \\t\\t\\t]\\n\\t\\t\\t\\t  \\t\\t\\t\\\"\\n\\t\\t\\t\\t  \\t\\t\\tvalue=\\\"{{task.progress}}\\\"></ion-progress-bar>\\n\\t\\t\\t  \\t\\t</div>\\n\\t\\t\\t  \\t</div>\\n\\t\\t\\t  </ion-card-content>\\n\\t\\t\\t</ion-card>\\t\\t\\t\\n\\t\\t</div>\\n\\n\\t</div>\\n\\n\\t<ion-card class=\\\"newtask-container\\\" *ngIf=\\\"showAddTaskView\\\">\\n\\t\\t<ion-card-content>\\n\\t\\t\\t<ion-item>\\n\\t\\t\\t\\t<ion-input type=\\\"text\\\" [(ngModel)]=\\\"addTaskName\\\"></ion-input>\\n\\t\\t\\t</ion-item>\\n\\t\\t\\t<div style=\\\"display: flex; justify-content: flex-end;\\\">\\n\\t\\t\\t\\t<ion-button (click)='onClickAddTask($event)'>Add Task</ion-button>\\n\\t\\t\\t</div>\\n\\t\\t</ion-card-content>\\n\\t</ion-card>\\n\\n  <ion-fab-button size=\\\"small\\\" class=\\\"task-fab\\\" (click)='onClickAddTask($event)'>\\n  \\t<ion-icon name=\\\"add\\\"></ion-icon>\\n  </ion-fab-button>\\n</ion-content>\\n\\n\\t<!-- \\n\\t<ion-grid>\\n\\t  <ion-row no-padding class=\\\"matrix\\\">\\n\\t    <ion-col class='task-container' size=\\\"12\\\">\\n\\t      <ion-item class=\\\"task-header\\\">Do</ion-item>\\n\\t      <ion-list \\n\\t      dragula=\\\"drag-tasks\\\" \\n\\t      [(dragulaModel)]=\\\"taskService.todo\\\" \\n\\t      (dragulaModelChange)=\\\"onChangeDrag($event, 'todo')\\\"\\n\\t      lines=\\\"none\\\">\\n        \\t<div *ngFor=\\\"let task of taskService.todo\\\">\\n\\t\\t        <ion-item \\n\\t\\t        [color]=\\\"primary\\\" \\n\\t\\t        expand=\\\"block\\\" \\n\\t\\t        text-wrap \\n\\t\\t        class='task-card'\\n\\t\\t        *ngIf='task.group==department'\\n\\t\\t        (click)='onClickTask($event, task)'\\n\\t\\t        >\\n\\t\\t          \\t{{ task.name }}\\n\\t\\t        </ion-item>\\n        \\t</div>\\n\\t      </ion-list>\\n\\t    </ion-col>\\n\\t\\n\\t    <ion-col class='task-container'  size=\\\"12\\\">\\n\\n\\t      <ion-item class=\\\"task-header\\\">Doing</ion-item>\\n\\n\\t      <ion-list \\n\\t      dragula=\\\"drag-tasks\\\" \\n\\t      [(dragulaModel)]=\\\"taskService.doing\\\" \\n\\t      (dragulaModelChange)=\\\"onChangeDrag($event, 'doing')\\\"\\n\\t      lines=\\\"none\\\">\\n        \\t<div *ngFor=\\\"let task of taskService.doing\\\">\\n\\t\\t        <ion-item \\n\\t\\t        [color]=\\\"primary\\\" \\n\\t\\t        expand=\\\"block\\\" \\n\\t\\t        text-wrap \\n\\t\\t        class='task-card'\\n\\t\\t        *ngIf='task.group==department'\\n\\t\\t        (click)='onClickTask($event, task)'\\n\\t\\t        >\\n\\t\\t          \\t{{ task.name }}\\n\\t\\t        </ion-item>\\n        \\t</div>\\n\\t      </ion-list>\\n\\t    </ion-col>\\n\\t\\n\\t    <ion-col class='task-container' size=\\\"12\\\">\\n\\t      <ion-item class=\\\"task-header\\\">Done</ion-item>\\n\\n\\t      <ion-list \\n\\t      dragula=\\\"drag-tasks\\\" \\n\\t      [(dragulaModel)]=\\\"taskService.done\\\" \\n\\t      (dragulaModelChange)=\\\"onChangeDrag($event, 'done')\\\"\\n\\t      lines=\\\"none\\\">\\n        \\t<div *ngFor=\\\"let task of taskService.done\\\">\\n\\t\\t        <ion-item \\n\\t\\t        [color]=\\\"primary\\\" \\n\\t\\t        expand=\\\"block\\\" \\n\\t\\t        text-wrap \\n\\t\\t        class='task-card'\\n\\t\\t        *ngIf='task.group==department'\\n\\t\\t        (click)='onClickTask($event, task)'\\n\\t\\t        >\\n\\t\\t          \\t{{ task.name }}\\n\\t\\t        </ion-item>\\n        \\t</div>\\n\\t      </ion-list>\\n\\t    </ion-col>\\n\\n\\t     </ion-row>\\n\\t   </ion-grid>\\n\\t -->\"","module.exports = \".main-container {\\n  width: 100%;\\n  height: 90%; }\\n\\n.task-fab {\\n  position: fixed;\\n  right: 45px;\\n  --background: var(--ion-color-secondary); }\\n\\n.newtask-container {\\n  max-width: 320px;\\n  position: absolute;\\n  right: 25px;\\n  bottom: 85px; }\\n\\n.task-container {\\n  min-height: 120px; }\\n\\n.taskCard {\\n  padding: 16px;\\n  font-size: 18px; }\\n\\n#do {\\n  min-height: 80px;\\n  border: 1px solid var(--ion-color-primary); }\\n\\n#doing {\\n  min-height: 80px;\\n  border: 1px solid var(--ion-color-primary); }\\n\\n#done {\\n  min-height: 80px;\\n  border: 1px solid var(--ion-color-primary); }\\n\\n.filler {\\n  padding: 20px; }\\n\\n.task-card {\\n  --background: var(--ion-color-primary);\\n  --color: var(--ion-color-light); }\\n\\nion-tab-bar ion-button {\\n  --background: var(--ion-color-medium); }\\n\\n.tasks-group {\\n  flex-grow: 1;\\n  height: 100%;\\n  padding-top: 40px; }\\n\\n.task-header {\\n  --background: var(--ion-color-medium-tint);\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  color: var(--ion-color-light);\\n  padding: 0;\\n  padding-left: 16px; }\\n\\n.task-edit-btn {\\n  font-size: 22px;\\n  color: var(--ion-color-light); }\\n\\n.task-content {\\n  background: var(--ion-color-dark);\\n  color: var(--ion-color-light);\\n  padding-top: 12px; }\\n\\n.task-content * {\\n  color: var(--ion-color-light); }\\n\\n.task-name {\\n  --color: var(--ion-color-dark);\\n  font-size: 16px; }\\n\\n.task-status {\\n  --background: var(--ion-color-dark); }\\n\\n.task-progress {\\n  --background: transparent; }\\n\\n.task-progress.red {\\n  --progress-background: var(--red); }\\n\\n.task-progress.yellow {\\n  --progress-background: var(--yellow); }\\n\\n.task-progress.green {\\n  --progress-background: var(--green); }\\n\\n.tab-bar-icon {\\n  width: 28px;\\n  height: 28px;\\n  vertical-align: middle;\\n  margin-right: 15px; }\\n\\n.action-row ion-button.red-bg {\\n  --background: var(--red); }\\n\\n.action-row ion-button.yellow-bg {\\n  --background: var(--yellow); }\\n\\n.action-row ion-button.green-bg {\\n  --background: var(--green); }\\n\\n.action-row ion-button.dark-bg {\\n  --background: var(--ion-color-dark); }\\n\\n.status-bar-legend {\\n  margin: 20px 0; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGFzay9DOlxcVXNlcnNcXEpvblxcUHJvamVjdHNcXERMU1UtTkNDLTU2NzgtZnJlZWxhbmNlL3NyY1xcYXBwXFx0YXNrXFx0YXNrLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNDLFdBQVc7RUFDWCxXQUFXLEVBQUE7O0FBR1o7RUFDRSxlQUFlO0VBQ2YsV0FBVztFQUNYLHdDQUFhLEVBQUE7O0FBR2Y7RUFDQyxnQkFBZ0I7RUFDZixrQkFBa0I7RUFDbEIsV0FBVztFQUNYLFlBQVksRUFBQTs7QUFHZDtFQUNFLGlCQUFpQixFQUFBOztBQUduQjtFQUNFLGFBQWE7RUFDYixlQUFlLEVBQUE7O0FBR2pCO0VBQ0UsZ0JBQWdCO0VBQ2hCLDBDQUEwQyxFQUFBOztBQUc1QztFQUNFLGdCQUFnQjtFQUNoQiwwQ0FBMEMsRUFBQTs7QUFHNUM7RUFDRSxnQkFBZ0I7RUFDaEIsMENBQTBDLEVBQUE7O0FBRzVDO0VBQ0UsYUFBYSxFQUFBOztBQUdmO0VBQ0Usc0NBQWE7RUFDYiwrQkFBUSxFQUFBOztBQUdWO0VBQ0UscUNBQWEsRUFBQTs7QUFHZjtFQUNFLFlBQVk7RUFDWixZQUFZO0VBQ1osaUJBQWlCLEVBQUE7O0FBR25CO0VBQ0UsMENBQWE7RUFDYixhQUFhO0VBQ2IsOEJBQThCO0VBQzlCLG1CQUFtQjtFQUNuQiw2QkFBNkI7RUFDN0IsVUFBVTtFQUNWLGtCQUFrQixFQUFBOztBQUdwQjtFQUNFLGVBQWU7RUFDZiw2QkFBNkIsRUFBQTs7QUFHL0I7RUFDRSxpQ0FBaUM7RUFDakMsNkJBQTZCO0VBQzdCLGlCQUFpQixFQUFBOztBQUduQjtFQUNFLDZCQUE2QixFQUFBOztBQUcvQjtFQUNFLDhCQUFRO0VBQ1IsZUFBZSxFQUFBOztBQUVqQjtFQUNFLG1DQUFhLEVBQUE7O0FBR2Y7RUFDRSx5QkFBYSxFQUFBOztBQUVmO0VBQ0UsaUNBQXNCLEVBQUE7O0FBRXhCO0VBQ0Usb0NBQXNCLEVBQUE7O0FBRXhCO0VBQ0UsbUNBQXNCLEVBQUE7O0FBR3hCO0VBQ0UsV0FBVztFQUNYLFlBQVk7RUFDWixzQkFBc0I7RUFDdEIsa0JBQWtCLEVBQUE7O0FBSXBCO0VBQ0Usd0JBQWEsRUFBQTs7QUFHZjtFQUNFLDJCQUFhLEVBQUE7O0FBR2Y7RUFDRSwwQkFBYSxFQUFBOztBQUdmO0VBQ0UsbUNBQWEsRUFBQTs7QUFHZjtFQUNFLGNBQWMsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3Rhc2svdGFzay5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWFpbi1jb250YWluZXJ7XHJcblx0d2lkdGg6IDEwMCU7XHJcblx0aGVpZ2h0OiA5MCU7XHJcbn1cclxuXHJcbi50YXNrLWZhYntcclxuICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgcmlnaHQ6IDQ1cHg7XHJcbiAgLS1iYWNrZ3JvdW5kOiB2YXIoLS1pb24tY29sb3Itc2Vjb25kYXJ5KTtcclxufVxyXG5cclxuLm5ld3Rhc2stY29udGFpbmVye1xyXG5cdG1heC13aWR0aDogMzIwcHg7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHJpZ2h0OiAyNXB4O1xyXG4gIGJvdHRvbTogODVweDtcclxufVxyXG5cclxuLnRhc2stY29udGFpbmVye1xyXG4gIG1pbi1oZWlnaHQ6IDEyMHB4O1xyXG59XHJcblxyXG4udGFza0NhcmR7XHJcbiAgcGFkZGluZzogMTZweDtcclxuICBmb250LXNpemU6IDE4cHg7XHJcbn1cclxuXHJcbiNkb3tcclxuICBtaW4taGVpZ2h0OiA4MHB4O1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkIHZhcigtLWlvbi1jb2xvci1wcmltYXJ5KTtcclxufVxyXG5cclxuI2RvaW5ne1xyXG4gIG1pbi1oZWlnaHQ6IDgwcHg7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgdmFyKC0taW9uLWNvbG9yLXByaW1hcnkpO1xyXG59XHJcblxyXG4jZG9uZXtcclxuICBtaW4taGVpZ2h0OiA4MHB4O1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkIHZhcigtLWlvbi1jb2xvci1wcmltYXJ5KTtcclxufVxyXG5cclxuLmZpbGxlcntcclxuICBwYWRkaW5nOiAyMHB4O1xyXG59XHJcblxyXG4udGFzay1jYXJke1xyXG4gIC0tYmFja2dyb3VuZDogdmFyKC0taW9uLWNvbG9yLXByaW1hcnkpO1xyXG4gIC0tY29sb3I6IHZhcigtLWlvbi1jb2xvci1saWdodCk7XHJcbn1cclxuXHJcbmlvbi10YWItYmFyIGlvbi1idXR0b257XHJcbiAgLS1iYWNrZ3JvdW5kOiB2YXIoLS1pb24tY29sb3ItbWVkaXVtKTtcclxufVxyXG5cclxuLnRhc2tzLWdyb3Vwe1xyXG4gIGZsZXgtZ3JvdzogMTtcclxuICBoZWlnaHQ6IDEwMCU7XHJcbiAgcGFkZGluZy10b3A6IDQwcHg7XHJcbn1cclxuXHJcbi50YXNrLWhlYWRlcntcclxuICAtLWJhY2tncm91bmQ6IHZhcigtLWlvbi1jb2xvci1tZWRpdW0tdGludCk7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBjb2xvcjogdmFyKC0taW9uLWNvbG9yLWxpZ2h0KTtcclxuICBwYWRkaW5nOiAwO1xyXG4gIHBhZGRpbmctbGVmdDogMTZweDtcclxufSBcclxuXHJcbi50YXNrLWVkaXQtYnRue1xyXG4gIGZvbnQtc2l6ZTogMjJweDtcclxuICBjb2xvcjogdmFyKC0taW9uLWNvbG9yLWxpZ2h0KTtcclxufVxyXG5cclxuLnRhc2stY29udGVudHtcclxuICBiYWNrZ3JvdW5kOiB2YXIoLS1pb24tY29sb3ItZGFyayk7XHJcbiAgY29sb3I6IHZhcigtLWlvbi1jb2xvci1saWdodCk7XHJcbiAgcGFkZGluZy10b3A6IDEycHg7XHJcbn1cclxuXHJcbi50YXNrLWNvbnRlbnQgKntcclxuICBjb2xvcjogdmFyKC0taW9uLWNvbG9yLWxpZ2h0KTtcclxufVxyXG5cclxuLnRhc2stbmFtZXtcclxuICAtLWNvbG9yOiB2YXIoLS1pb24tY29sb3ItZGFyayk7XHJcbiAgZm9udC1zaXplOiAxNnB4O1xyXG59XHJcbi50YXNrLXN0YXR1c3tcclxuICAtLWJhY2tncm91bmQ6IHZhcigtLWlvbi1jb2xvci1kYXJrKTtcclxufVxyXG5cclxuLnRhc2stcHJvZ3Jlc3N7XHJcbiAgLS1iYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcclxufVxyXG4udGFzay1wcm9ncmVzcy5yZWR7XHJcbiAgLS1wcm9ncmVzcy1iYWNrZ3JvdW5kOiB2YXIoLS1yZWQpO1xyXG59XHJcbi50YXNrLXByb2dyZXNzLnllbGxvd3tcclxuICAtLXByb2dyZXNzLWJhY2tncm91bmQ6IHZhcigtLXllbGxvdyk7XHJcbn1cclxuLnRhc2stcHJvZ3Jlc3MuZ3JlZW57XHJcbiAgLS1wcm9ncmVzcy1iYWNrZ3JvdW5kOiB2YXIoLS1ncmVlbik7XHJcbn1cclxuXHJcbi50YWItYmFyLWljb257XHJcbiAgd2lkdGg6IDI4cHg7XHJcbiAgaGVpZ2h0OiAyOHB4O1xyXG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcbiAgbWFyZ2luLXJpZ2h0OiAxNXB4O1xyXG59XHJcblxyXG5cclxuLmFjdGlvbi1yb3cgaW9uLWJ1dHRvbi5yZWQtYmd7XHJcbiAgLS1iYWNrZ3JvdW5kOiB2YXIoLS1yZWQpO1xyXG59XHJcblxyXG4uYWN0aW9uLXJvdyBpb24tYnV0dG9uLnllbGxvdy1iZ3tcclxuICAtLWJhY2tncm91bmQ6IHZhcigtLXllbGxvdyk7XHJcbn1cclxuXHJcbi5hY3Rpb24tcm93IGlvbi1idXR0b24uZ3JlZW4tYmd7XHJcbiAgLS1iYWNrZ3JvdW5kOiB2YXIoLS1ncmVlbik7XHJcbn1cclxuXHJcbi5hY3Rpb24tcm93IGlvbi1idXR0b24uZGFyay1iZ3tcclxuICAtLWJhY2tncm91bmQ6IHZhcigtLWlvbi1jb2xvci1kYXJrKTtcclxufVxyXG5cclxuLnN0YXR1cy1iYXItbGVnZW5ke1xyXG4gIG1hcmdpbjogMjBweCAwO1xyXG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { TaskService } from '../services/task.service';\nimport { ModalController } from '@ionic/angular';\nimport { TaskModalPage } from '../modals/task-modal/task-modal.page';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { Storage } from '@ionic/storage';\nimport { DragulaService } from 'ng2-dragula';\nimport { ToastController } from '@ionic/angular';\nimport { SearchService } from '../services/search.service';\nimport * as objects from '../../models/app-objects'\n\n@Component({\n  selector: 'app-task',\n  templateUrl: './task.page.html',\n  styleUrls: ['./task.page.scss'],\n})\nexport class TaskPage implements OnInit {\n  \n  addTaskName\n  showAddTaskView = false\n\n  prevDragged\n  filter = 'showall'\n  selectedDepartment = 'showall'\n  selectedOrder = 'date_asc'\n\n  constructor(\n    public taskService: TaskService\n    , public modalController: ModalController\n    , public afs: AngularFirestore\n    , public storage: Storage\n    , public dragulaService: DragulaService\n    , public toastController: ToastController\n    , public searchService: SearchService\n   ) { \n \n    this.dragulaService.dropModel('drag-tasks')\n      .subscribe(({ item }) => {\n        this.prevDragged = item\n    });\n\n    let drake = this.dragulaService.createGroup('drag-tasks', {\n      revertOnSpill: true\n    }).drake\n\n    this.storage.get('department').then((res)=>{\n        this.selectedDepartment = res || 'marketing'\n    })\n  }\n\n  onChangeDrag(evt, status){\n   console.log('-onChangeDrag', status)\n    let tasksLength \n    if(this.prevDragged.status == status)\n      return;\n    setTimeout((res)=>{\n       let prevDrag = this.prevDragged\n       prevDrag.status = status\n       this.taskService.updateTask(prevDrag)\n    },1)\n  }\n\n\n  ngOnInit() {\n  }\n\n  switchTab(tab){\n    this.storage.set('department', tab)\n    this.selectedDepartment = tab;\n\t}\n\n\n  // onClickAddTask(evt){\n  //   this.showAddTaskView = !this.showAddTaskView\n  //   this.createNewTask(this.addTaskName, this.department)\n  // }\n\n  async onClickAddTask(evt){\n    console.log('[onClickTask]')\n      const modal = await this.modalController.create({\n        component: TaskModalPage,\n        componentProps: {\n         task: new objects.Task('New Task Title', this.selectedDepartment)\n         , isCreateNew: true\n         }\n      });\n      return await modal.present();\n   }\n  async onClickTask(evt, task){\n    console.log('[onClickTask]', task)\n      const modal = await this.modalController.create({\n        component: TaskModalPage,\n        componentProps: { task: task }\n      });\n\n      await modal.present();\n\n   }\n   addTask(){\n     this.showAddTaskView = !this.showAddTaskView\n   }\n\n   filterTasks(filter){\n     this.filter = filter\n   }\n\n   selectDepartment(selectedDepartment){\n     this.selectedDepartment = selectedDepartment\n   }\n\n}\n"],"sourceRoot":""}