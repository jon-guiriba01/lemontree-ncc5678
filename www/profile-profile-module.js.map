{"version":3,"sources":["webpack:///./src/app/profile/profile.module.ts","webpack:///./src/app/profile/profile.page.html","webpack:///./src/app/profile/profile.page.scss","webpack:///./src/app/profile/profile.page.ts"],"names":[],"mappings":"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","file":"profile-profile-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ProfilePage } from './profile.page';\nimport { ReactiveFormsModule} from '@angular/forms';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProfilePage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [ProfilePage]\n})\nexport class ProfilePageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons >\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n\\t<div class='main-container'>\\n\\t\\t<form [formGroup]=\\\"settingsForm\\\">\\n\\t\\t\\t<div class='head-container'>\\n\\t\\t\\t\\t<ion-grid>\\n  \\t\\t\\t  <ion-row >\\n  \\t\\t\\t  \\t<div class='avatar-team-wrapper'>\\n\\t  \\t\\t\\t    <ion-col class='avatar-col'>\\n\\t  \\t\\t\\t    \\t<div class='avatar-container'>\\n\\t  \\t\\t\\t    \\t\\t<img class='avatar' [(src)]='authService.user.profileImageUrl'/>\\n\\t  \\t\\t\\t    \\t\\t<h5 class='edit-avatar-btn' (click)='changeAvatar()'>EDIT</h5>\\n\\t  \\t\\t\\t    \\t</div>\\n\\t  \\t\\t\\t    </ion-col>\\n\\t  \\t\\t\\t    <ion-col size='8'>\\n\\t\\t\\t\\t\\t\\t\\t<h5 class='myprofile-text'>My Profile</h5>\\n\\n\\t\\t\\t\\t      <ion-item lines='none'>\\n\\t\\t\\t\\t        <ion-label position='floating'>Team</ion-label>\\n\\t\\t\\t\\t        <!-- <ion-input class='team-input' type='text' formControlName='team' [(ngModel)]='authService.user.team' (ionChange)='updateTeam()' [(readonly)]='isReadOnly'></ion-input> -->\\n\\t\\t\\t\\t        <ion-select  class='team-input' type='text' formControlName='team' [(ngModel)]='authService.user.team' (ionChange)='updateTeam()' >\\n\\t\\t\\t\\t        \\t<ion-select-option value=\\\"admin\\\">Admin</ion-select-option>\\n\\t\\t\\t\\t        \\t<ion-select-option value=\\\"operations\\\">Operations</ion-select-option>\\n\\t\\t\\t\\t        \\t<ion-select-option value=\\\"marketing\\\">Marketing</ion-select-option>\\n\\t\\t\\t\\t        \\t<ion-select-option value=\\\"camps\\\">Camps</ion-select-option>\\n\\t\\t\\t\\t        </ion-select >\\n\\t\\t\\t      \\t</ion-item>\\n\\t\\t\\t        <div class=\\\"error-list\\\" >\\n\\t\\t\\t        \\t<div *ngFor=\\\"let validation of validationMessages.team\\\" >\\n\\t\\t\\t\\t        \\t<h5 class=\\\"error-msg\\\" *ngIf=\\\"settingsForm.get('team').hasError(validation.type) && (settingsForm.get('team').dirty || settingsForm.get('team').touched)\\\" >\\n\\t\\t\\t\\t        \\t\\t{{validation.message}}\\n\\t\\t\\t\\t        \\t</h5>\\n\\t\\t\\t        \\t</div>\\n\\t\\t\\t        </div>\\n\\t  \\t\\t\\t    </ion-col>\\n  \\t\\t\\t  \\t\\t\\n  \\t\\t\\t  \\t</div>\\n  \\t\\t\\t  </ion-row>\\n\\n\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</ion-grid>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<ion-grid>\\n\\n  \\t\\t\\t  <ion-row>\\n\\n  \\t\\t\\t    <ion-col>\\n  \\t\\t\\t      <ion-item lines='none' class='profile-item'> \\n  \\t\\t\\t        <ion-label position='floating'>First Name</ion-label>\\n  \\t\\t\\t        <ion-input type='text' formControlName='firstName' [(ngModel)]='authService.user.first_name' (ionChange)='updateFirstName()' [(readonly)]='isReadOnly'></ion-input>\\n  \\t\\t\\t      </ion-item>\\n\\t\\t\\t        <div class=\\\"error-list\\\" >\\n\\t\\t\\t        \\t<div *ngFor=\\\"let validation of validationMessages.firstName\\\" >\\n\\t\\t\\t\\t        \\t<h5 class=\\\"error-msg\\\" *ngIf=\\\"settingsForm.get('firstName').hasError(validation.type) && (settingsForm.get('firstName').dirty || settingsForm.get('firstName').touched)\\\" >\\n\\t\\t\\t\\t        \\t\\t{{validation.message}}\\n\\t\\t\\t\\t        \\t</h5>\\n\\t\\t\\t        \\t</div>\\n\\t\\t\\t        </div>\\n  \\t\\t\\t    </ion-col>\\n\\n  \\t\\t\\t  </ion-row>\\n\\n  \\t\\t\\t  <ion-row>\\n\\n  \\t\\t\\t    <ion-col>\\n  \\t\\t\\t      <ion-item lines='none' class='profile-item'>\\n  \\t\\t\\t        <ion-label position='floating'>Last Name</ion-label>\\n  \\t\\t\\t        <ion-input type='text' formControlName='lastName' [(ngModel)]='authService.user.last_name' (ionChange)='updateLastName()' [(readonly)]='isReadOnly'></ion-input>\\n  \\t\\t\\t      </ion-item>\\n\\t\\t\\t        <div class=\\\"error-list\\\" >\\n\\t\\t\\t        \\t<div *ngFor=\\\"let validation of validationMessages.lastName\\\" >\\n\\t\\t\\t\\t        \\t<h5 class=\\\"error-msg\\\" *ngIf=\\\"settingsForm.get('lastName').hasError(validation.type) && (settingsForm.get('lastName').dirty || settingsForm.get('lastName').touched)\\\" >\\n\\t\\t\\t\\t        \\t\\t{{validation.message}}\\n\\t\\t\\t\\t        \\t</h5>\\n\\t\\t\\t        \\t</div>\\n\\t\\t\\t        </div>\\n  \\t\\t\\t    </ion-col>\\n\\n  \\t\\t\\t  </ion-row>\\n\\n  \\t\\t\\t  <ion-row>\\n\\n  \\t\\t\\t    <ion-col>\\n\\n  \\t\\t\\t      <ion-item lines='none' class='profile-item'>\\n  \\t\\t\\t        <ion-label position='floating'>Email</ion-label>\\n  \\t\\t\\t        <ion-input type='text' formControlName='email' [(ngModel)]='authService.user.email' readonly='true'></ion-input>\\n  \\t\\t\\t      </ion-item>\\n\\t\\t\\t        <div class=\\\"error-list\\\" >\\n\\t\\t\\t        \\t<div *ngFor=\\\"let validation of validationMessages.email\\\" >\\n\\t\\t\\t\\t        \\t<h5 class=\\\"error-msg\\\" *ngIf=\\\"settingsForm.get('email').hasError(validation.type) && (settingsForm.get('email').dirty || settingsForm.get('email').touched)\\\" >\\n\\t\\t\\t\\t        \\t\\t{{validation.message}}\\n\\t\\t\\t\\t        \\t</h5>\\n\\t\\t\\t        \\t</div>\\n\\t\\t\\t        </div>\\n\\n  \\t\\t\\t    </ion-col>\\n  \\t\\t\\t    \\n  \\t\\t\\t  </ion-row>\\n\\n  \\t\\t\\t  <ion-row>\\n\\n  \\t\\t\\t    <ion-col>\\n\\n  \\t\\t\\t      <ion-item lines='none' class='profile-item'>\\n  \\t\\t\\t        <ion-label position='floating'>Contact Number</ion-label>\\n  \\t\\t\\t        <ion-input type='text' formControlName='contactNumber'  [(ngModel)]='authService.user.contact_number' (ionChange)='updateContactNumber()' [(readonly)]='isReadOnly'></ion-input>\\n  \\t\\t\\t      </ion-item>\\n\\t\\t\\t        <div class=\\\"error-list\\\" >\\n\\t\\t\\t        \\t<div *ngFor=\\\"let validation of validationMessages.contactNumber\\\" >\\n\\t\\t\\t\\t        \\t<h5 class=\\\"error-msg\\\" *ngIf=\\\"settingsForm.get('contactNumber').hasError(validation.type) && (settingsForm.get('contactNumber').dirty || settingsForm.get('contactNumber').touched)\\\" >\\n\\t\\t\\t\\t        \\t\\t{{validation.message}}\\n\\t\\t\\t\\t        \\t</h5>\\n\\t\\t\\t        \\t</div>\\n\\t\\t\\t        </div>\\n\\n  \\t\\t\\t    </ion-col>\\n\\n  \\t\\t\\t  </ion-row>\\n\\n  \\t\\t\\t  <ion-row>\\n\\n  \\t\\t\\t    <ion-col>\\n\\n  \\t\\t\\t      <ion-item lines='none' class='profile-item'>\\n  \\t\\t\\t        <ion-label position='floating'>Birthday</ion-label>\\n  \\t\\t\\t        <ion-datetime class='datetime-input' display-format=\\\"MMM DD, YYYY\\\" formControlName='birthdate' [(ngModel)]='authService.user.birthdate' (ionChange)='updateBirthdate()' [(readonly)]='isReadOnly'></ion-datetime>\\n  \\t\\t\\t      </ion-item>\\n\\t\\t\\t        <div class=\\\"error-list\\\" >\\n\\t\\t\\t        \\t<div *ngFor=\\\"let validation of validationMessages.birthdate\\\" >\\n\\t\\t\\t\\t        \\t<h5 class=\\\"error-msg\\\" *ngIf=\\\"settingsForm.get('birthdate').hasError(validation.type) && (settingsForm.get('birthdate').dirty || settingsForm.get('birthdate').touched)\\\" >\\n\\t\\t\\t\\t        \\t\\t{{validation.message}}\\n\\t\\t\\t\\t        \\t</h5>\\n\\t\\t\\t        \\t</div>\\n\\t\\t\\t        </div>\\n\\n  \\t\\t\\t    </ion-col>\\n\\n\\n  \\t\\t\\t  </ion-row>\\n\\n  \\t\\t\\t</ion-grid>\\n\\n\\t\\t\\t\\t<div class='action-row'>\\n\\t\\t\\t\\t\\t<!-- <ion-button class='edit-btn' (click)='onClickEditProfile($event)' fill='clear'>\\n\\t\\t\\t\\t\\t\\tEDIT PROFILE\\n\\t\\t\\t\\t\\t</ion-button> -->\\n\\t\\t\\t\\t\\t<ion-button class='-btn' (click)='teamDetails($event)' fill='clear'>\\n\\t\\t\\t\\t\\tTEAM DETAILS\\n\\t\\t\\t\\t\\t</ion-button>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t</form>\\n\\t\\t</div>\\n\\t\\t\\n</ion-content>\\n\\n\\n<ion-toolbar class='extra-toolbar' color=\\\"primary\\\">\\n</ion-toolbar>\\n\\n<input type=\\\"file\\\" name=\\\"\\\" style='display: none;' class='hidden-input'/>\\n\"","module.exports = \".avatar-container {\\n  max-width: 140px;\\n  min-width: 140px;\\n  min-height: 140px;\\n  border: 2px solid var(--yellow);\\n  margin-left: 18px;\\n  position: relative; }\\n\\n.myprofile-text {\\n  color: var(--yellow); }\\n\\nion-label {\\n  color: var(--red) !important;\\n  font-weight: bold;\\n  font-size: 26px; }\\n\\n@media (max-width: 599px) {\\n    ion-label {\\n      max-height: 18px; } }\\n\\nion-input, ion-datetime, ion-select {\\n  color: var(--ion-color-light);\\n  background: var(--yellow);\\n  --padding-start: 8px !important; }\\n\\n@media (max-width: 599px) {\\n    ion-input, ion-datetime, ion-select {\\n      max-height: 22px;\\n      font-size: 13px;\\n      --padding-top: 0px;\\n      --padding-bottom: 0px; } }\\n\\nion-button {\\n  color: var(--ion-color-light) !important;\\n  background: var(--red) !important;\\n  --background: var(--red) !important; }\\n\\n.action-row {\\n  display: flex;\\n  justify-content: flex-end;\\n  margin: 0 auto;\\n  padding: 0 24px; }\\n\\n.edit-avatar-btn {\\n  background: var(--ion-color-dark-tint);\\n  color: var(--ion-color-light);\\n  position: absolute;\\n  padding: 4px 12px;\\n  bottom: 0;\\n  left: 33%;\\n  font-size: 14px;\\n  margin: 0;\\n  cursor: pointer; }\\n\\n.avatar-col {\\n  display: flex;\\n  justify-content: center;\\n  padding: 8px; }\\n\\n.edit-btn {\\n  --color-activated: var(--yellow); }\\n\\n.avatar {\\n  width: 100%;\\n  height: 100%; }\\n\\n.profile-item ion-label {\\n  margin-top: 0px; }\\n\\n@media (max-width: 599px) {\\n  .profile-item {\\n    max-height: 56px; } }\\n\\n.avatar-team-wrapper {\\n  display: flex;\\n  justify-content: space-between; }\\n\\nion-grid {\\n  padding: 0; }\\n\\nion-col {\\n  padding: 0; }\\n\\n.avatar-container {\\n  max-width: 90px;\\n  min-width: 90px;\\n  min-width: 90px;\\n  min-height: 90px; }\\n\\n.head-container {\\n  margin-bottom: 18px; }\\n\\n.extra-toolbar {\\n  height: 15px; }\\n\\n@media (max-width: 599px) {\\n  ion-toolbar {\\n    /*height: 35px;*/ } }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcHJvZmlsZS9DOlxcVXNlcnNcXEpvblxcUHJvamVjdHNcXERMU1UtTkNDLTU2NzgtZnJlZWxhbmNlL3NyY1xcYXBwXFxwcm9maWxlXFxwcm9maWxlLnBhZ2Uuc2NzcyIsInNyYy9hcHAvcHJvZmlsZS9DOlxcVXNlcnNcXEpvblxcUHJvamVjdHNcXERMU1UtTkNDLTU2NzgtZnJlZWxhbmNlL3NyY1xcYXBwXFxtb2JpbGVfbWl4aW4uc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFLQTtFQUNDLGdCQUFnQjtFQUNoQixnQkFBZ0I7RUFDaEIsaUJBQWlCO0VBQ2pCLCtCQUErQjtFQUMvQixpQkFBaUI7RUFDakIsa0JBQWtCLEVBQUE7O0FBR25CO0VBQ0Msb0JBQW9CLEVBQUE7O0FBR3JCO0VBQ0MsNEJBQTRCO0VBQzVCLGlCQUFpQjtFQUNqQixlQUFlLEVBQUE7O0FDZFo7SURXSjtNQVFFLGdCQUFnQixFQUFBLEVBRWpCOztBQUVEO0VBQ0MsNkJBQTZCO0VBQzdCLHlCQUF5QjtFQUN6QiwrQkFBZ0IsRUFBQTs7QUMxQmI7SUR1Qko7TUFPRyxnQkFBZ0I7TUFDaEIsZUFBZTtNQUNmLGtCQUFjO01BQ2QscUJBQWlCLEVBQUEsRUFHbkI7O0FBRUQ7RUFDQyx3Q0FBd0M7RUFDeEMsaUNBQWlDO0VBQ2pDLG1DQUFhLEVBQUE7O0FBR2Q7RUFDRSxhQUFhO0VBQ2IseUJBQXlCO0VBQ3pCLGNBQWM7RUFDZCxlQUFlLEVBQUE7O0FBR2pCO0VBQ0Msc0NBQXNDO0VBQ3RDLDZCQUE2QjtFQUM3QixrQkFBa0I7RUFDbEIsaUJBQWlCO0VBQ2pCLFNBQVM7RUFDVCxTQUFTO0VBQ1QsZUFBZTtFQUNmLFNBQVM7RUFDVCxlQUFlLEVBQUE7O0FBR2hCO0VBQ0MsYUFBYTtFQUNiLHVCQUF1QjtFQUN2QixZQUFZLEVBQUE7O0FBR2I7RUFDQyxnQ0FBa0IsRUFBQTs7QUFHbkI7RUFDQyxXQUFXO0VBQ1gsWUFBWSxFQUFBOztBQUdiO0VBQ0MsZUFBZSxFQUFBOztBQy9FWjtFRGlGSjtJQUdFLGdCQUFnQixFQUFBLEVBRWpCOztBQUVEO0VBQ0MsYUFBYTtFQUNiLDhCQUE4QixFQUFBOztBQUcvQjtFQUNDLFVBQVUsRUFBQTs7QUFHWDtFQUNDLFVBQVUsRUFBQTs7QUFHWDtFQUNDLGVBQWU7RUFDZixlQUFlO0VBQ2YsZUFBZTtFQUNmLGdCQUFnQixFQUFBOztBQUdqQjtFQUNDLG1CQUFtQixFQUFBOztBQUdwQjtFQUNDLFlBQVksRUFBQTs7QUNqSFQ7RURxSEo7SUFHSSxnQkFBQSxFQUFpQixFQUVwQiIsImZpbGUiOiJzcmMvYXBwL3Byb2ZpbGUvcHJvZmlsZS5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0ICcuLi9tb2JpbGVfbWl4aW4nO1xyXG5cclxuLmhlYWQtY29udGFpbmVye1xyXG59XHJcblxyXG4uYXZhdGFyLWNvbnRhaW5lcntcclxuXHRtYXgtd2lkdGg6IDE0MHB4O1xyXG5cdG1pbi13aWR0aDogMTQwcHg7XHJcblx0bWluLWhlaWdodDogMTQwcHg7XHJcblx0Ym9yZGVyOiAycHggc29saWQgdmFyKC0teWVsbG93KTtcclxuXHRtYXJnaW4tbGVmdDogMThweDtcclxuXHRwb3NpdGlvbjogcmVsYXRpdmU7XHJcbn1cclxuXHJcbi5teXByb2ZpbGUtdGV4dHtcclxuXHRjb2xvcjogdmFyKC0teWVsbG93KTtcclxufVxyXG5cclxuaW9uLWxhYmVse1xyXG5cdGNvbG9yOiB2YXIoLS1yZWQpICFpbXBvcnRhbnQ7XHJcblx0Zm9udC13ZWlnaHQ6IGJvbGQ7XHJcblx0Zm9udC1zaXplOiAyNnB4O1xyXG5cclxuXHJcblx0XHRcdFxyXG5cdEBpbmNsdWRlIGZvci1zaXplKHBob25lLW9ubHkpIHtcclxuXHRcdG1heC1oZWlnaHQ6IDE4cHg7XHJcblx0fVxyXG59XHJcblxyXG5pb24taW5wdXQsIGlvbi1kYXRldGltZSwgaW9uLXNlbGVjdHtcclxuXHRjb2xvcjogdmFyKC0taW9uLWNvbG9yLWxpZ2h0KTtcclxuXHRiYWNrZ3JvdW5kOiB2YXIoLS15ZWxsb3cpO1xyXG5cdC0tcGFkZGluZy1zdGFydDogOHB4ICFpbXBvcnRhbnQ7XHJcblxyXG5cdFx0XHJcblx0QGluY2x1ZGUgZm9yLXNpemUocGhvbmUtb25seSkge1xyXG4gIFx0bWF4LWhlaWdodDogMjJweDtcclxuICBcdGZvbnQtc2l6ZTogMTNweDtcclxuICBcdC0tcGFkZGluZy10b3A6IDBweDtcclxuICBcdC0tcGFkZGluZy1ib3R0b206IDBweDtcclxuXHR9XHJcblxyXG59XHJcblxyXG5pb24tYnV0dG9ue1xyXG5cdGNvbG9yOiB2YXIoLS1pb24tY29sb3ItbGlnaHQpICFpbXBvcnRhbnQ7XHJcblx0YmFja2dyb3VuZDogdmFyKC0tcmVkKSAhaW1wb3J0YW50O1xyXG5cdC0tYmFja2dyb3VuZDogdmFyKC0tcmVkKSAhaW1wb3J0YW50O1xyXG59XHJcblxyXG4uYWN0aW9uLXJvd3tcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XHJcbiAgbWFyZ2luOiAwIGF1dG87XHJcbiAgcGFkZGluZzogMCAyNHB4O1xyXG59XHJcblxyXG4uZWRpdC1hdmF0YXItYnRue1xyXG5cdGJhY2tncm91bmQ6IHZhcigtLWlvbi1jb2xvci1kYXJrLXRpbnQpO1xyXG5cdGNvbG9yOiB2YXIoLS1pb24tY29sb3ItbGlnaHQpO1xyXG5cdHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuXHRwYWRkaW5nOiA0cHggMTJweDtcclxuXHRib3R0b206IDA7XHJcblx0bGVmdDogMzMlO1xyXG5cdGZvbnQtc2l6ZTogMTRweDtcclxuXHRtYXJnaW46IDA7XHJcblx0Y3Vyc29yOiBwb2ludGVyO1xyXG59XHJcblxyXG4uYXZhdGFyLWNvbHtcclxuXHRkaXNwbGF5OiBmbGV4O1xyXG5cdGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG5cdHBhZGRpbmc6IDhweDtcclxufVxyXG5cclxuLmVkaXQtYnRue1xyXG5cdC0tY29sb3ItYWN0aXZhdGVkOiB2YXIoLS15ZWxsb3cpO1xyXG59XHJcblxyXG4uYXZhdGFye1xyXG5cdHdpZHRoOiAxMDAlO1xyXG5cdGhlaWdodDogMTAwJTtcclxufVxyXG5cclxuLnByb2ZpbGUtaXRlbSBpb24tbGFiZWx7XHJcblx0bWFyZ2luLXRvcDogMHB4O1xyXG59XHJcbi5wcm9maWxlLWl0ZW17XHJcblxyXG5cdEBpbmNsdWRlIGZvci1zaXplKHBob25lLW9ubHkpIHtcclxuXHRcdG1heC1oZWlnaHQ6IDU2cHg7XHJcblx0fVxyXG59XHJcblxyXG4uYXZhdGFyLXRlYW0td3JhcHBlcntcclxuXHRkaXNwbGF5OiBmbGV4O1xyXG5cdGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxufVxyXG5cclxuaW9uLWdyaWR7XHJcblx0cGFkZGluZzogMDtcclxufVxyXG5cclxuaW9uLWNvbHtcclxuXHRwYWRkaW5nOiAwO1xyXG59XHJcblxyXG4uYXZhdGFyLWNvbnRhaW5lcntcclxuXHRtYXgtd2lkdGg6IDkwcHg7XHJcblx0bWluLXdpZHRoOiA5MHB4O1xyXG5cdG1pbi13aWR0aDogOTBweDtcclxuXHRtaW4taGVpZ2h0OiA5MHB4O1xyXG59XHJcblxyXG4uaGVhZC1jb250YWluZXJ7XHJcblx0bWFyZ2luLWJvdHRvbTogMThweDtcclxufVxyXG5cclxuLmV4dHJhLXRvb2xiYXJ7XHJcblx0aGVpZ2h0OiAxNXB4O1xyXG59XHJcblxyXG5cclxuaW9uLXRvb2xiYXJ7XHJcblxyXG4gIEBpbmNsdWRlIGZvci1zaXplKHBob25lLW9ubHkpIHtcclxuICAgIC8qaGVpZ2h0OiAzNXB4OyovXHJcbiAgfVxyXG59IiwiQG1peGluIGZvci1zaXplKCRyYW5nZSkge1xyXG4gICRwaG9uZS11cHBlci1ib3VuZGFyeTogNjAwcHg7XHJcbiAgJHRhYmxldC1wb3J0cmFpdC11cHBlci1ib3VuZGFyeTogOTAwcHg7XHJcbiAgJHRhYmxldC1sYW5kc2NhcGUtdXBwZXItYm91bmRhcnk6IDEyMDBweDtcclxuICAkZGVza3RvcC11cHBlci1ib3VuZGFyeTogMTgwMHB4O1xyXG5cclxuICBAaWYgJHJhbmdlID09IHBob25lLW9ubHkge1xyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6ICN7JHBob25lLXVwcGVyLWJvdW5kYXJ5IC0gMX0pIHsgQGNvbnRlbnQ7IH1cclxuICB9IEBlbHNlIGlmICRyYW5nZSA9PSB0YWJsZXQtcG9ydHJhaXQtdXAge1xyXG4gICAgQG1lZGlhIChtaW4td2lkdGg6ICRwaG9uZS11cHBlci1ib3VuZGFyeSkgeyBAY29udGVudDsgfVxyXG4gIH0gQGVsc2UgaWYgJHJhbmdlID09IHRhYmxldC1sYW5kc2NhcGUtdXAge1xyXG4gICAgQG1lZGlhIChtaW4td2lkdGg6ICR0YWJsZXQtcG9ydHJhaXQtdXBwZXItYm91bmRhcnkpIHsgQGNvbnRlbnQ7IH1cclxuICB9IEBlbHNlIGlmICRyYW5nZSA9PSBkZXNrdG9wLXVwIHtcclxuICAgIEBtZWRpYSAobWluLXdpZHRoOiAkdGFibGV0LWxhbmRzY2FwZS11cHBlci1ib3VuZGFyeSkgeyBAY29udGVudDsgfVxyXG4gIH0gQGVsc2UgaWYgJHJhbmdlID09IGJpZy1kZXNrdG9wLXVwIHtcclxuICAgIEBtZWRpYSAobWluLXdpZHRoOiAkZGVza3RvcC11cHBlci1ib3VuZGFyeSkgeyBAY29udGVudDsgfVxyXG4gIH1cclxufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Validators, FormBuilder, FormGroup, FormControl, ValidatorFn, AbstractControl } from '@angular/forms';\nimport { AuthService } from '../services/auth.service';\nimport Cookies from 'js-cookie'\nimport { Router } from '@angular/router';\nimport * as $ from 'jquery'\nimport { StorageService } from '../services/storage.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.page.html',\n  styleUrls: ['./profile.page.scss'],\n})\nexport class ProfilePage implements OnInit {\n\n\tisReadOnly = false;\n\t\n  settingsForm:FormGroup\n\n  validationMessages = {\n    'firstName': [\n        { type: 'minlength', message: 'name must be at least 2 characters long.' },\n        { type: 'maxlength', message: 'name cannot be more than 30 characters long.' },\n      ],\n    'lastName': [\n        { type: 'minlength', message: 'name must be at least 2 characters long.' },\n        { type: 'maxlength', message: 'name cannot be more than 30 characters long.' },\n      ],\n      'email': [\n        { type: 'email', message: 'must be a valid email.' }\n      ],\n      'contactNumber': [\n        { type: 'minlength', message: 'contact number should be exactly 11 characters.' }\n      ],\n      'birthdate': [\n        { type: 'required', message: 'contact number is required.' },\n      ],\n      'team': [\n        { type: 'required', message: 'contact number is required.' },\n      ],\n  }\n\n\n  // A letter, a number, an uppercase, min of 8\n  passwordRegex='^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9]).+$'\n  \n  // email regex\n  emailRegex='^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$'\n  \n\n  constructor(\n    public formBuilder: FormBuilder\n    , public authService: AuthService\n    , public router: Router\n    , public storageService: StorageService\n\t) {\n  \t\n  \tconsole.log('[settings constructor]', this.authService.user)\n    this.settingsForm = this.formBuilder.group({\n      firstName: new FormControl('', Validators.compose([\n        Validators.maxLength(30),\n        Validators.minLength(2),\n        Validators.required\n       ]))\n      ,lastName: new FormControl('', Validators.compose([\n        Validators.maxLength(30),\n        Validators.minLength(2),\n        Validators.required\n       ]))\n      ,email: new FormControl('', Validators.compose([\n        Validators.required,\n        Validators.email\n      ]))\n      ,contactNumber: new FormControl('', Validators.compose([\n        Validators.maxLength(11),\n        Validators.minLength(11),\n        Validators.required\n      ]))\n      ,birthdate: new FormControl('', Validators.compose([\n        Validators.required\n      ]))\n      ,team: new FormControl('', [\n        Validators.required\n      ])\n \n    });\n\n  }\n  ngOnInit() {\n\n  }\n\n\n  navTo(route){\n    this.router.navigateByUrl(route);\n  }\n\n  updateFirstName(){\n  \tif(this.settingsForm.get('firstName').status != 'INVALID')\n  \t\tthis.authService.updateUser()\n  }\n\n  updateLastName(){\n  \tif(this.settingsForm.get('lastName').status != 'INVALID')\n  \t\tthis.authService.updateUser()\n  \t\n  }\n\n  updateBirthdate(){\n  \tif(this.settingsForm.get('birthdate').status != 'INVALID')\n  \t\tthis.authService.updateUser()\n  \t\n  }\n\n  updateContactNumber(){\n  \tif(this.settingsForm.get('contactNumber').status != 'INVALID')\n  \t\tthis.authService.updateUser()\n  \t\n  }\n\n  updateTeam(){\n  \tif(this.settingsForm.get('team').status != 'INVALID')\n  \t\tthis.authService.updateUser()\n  }\n\n  onClickEditProfile(evt){\n  \tconsole.log('this.isReadOnly', this.isReadOnly)\n  \tthis.isReadOnly = false;\n  \tconsole.log('this.isReadOnly', this.isReadOnly)\n  }\n\n  changeAvatar(){\n    $('.hidden-input').click()\n\n    $('.hidden-input').change(async (e:any)=>{\n        e.stopImmediatePropagation();\n        var file = e.target.files[0];\n        console.log('The file \"' + file.name +  '\" has been selected.');\n\n        let imageUrl = await this.storageService.uploadFile(\n          file\n          , this.authService.user.team\n          , this.authService.user.team+\"/\"+this.authService.user.last_name+\"_\"+this.authService.user.id\n         )\n        \n        this.authService.user.profileImageUrl = imageUrl\n        this.authService.updateUser()\n    });\n  }\n\n  teamDetails(evt){\n\n  }\n\n}\n\n\n"],"sourceRoot":""}